openapi: 3.0.3
info:
  title: FleetOps API
  description: API documentation for FleetOps backend services (Drivers, Vehicles, Inspections).
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /api/drivers/status:
    get:
      summary: Get driver service status
      tags:
        - Drivers
      responses:
        "200":
          description: Service status string
          content:
            text/plain:
              schema:
                type: string

  /api/drivers/{id}:
    get:
      summary: Get driver by ID
      tags:
        - Drivers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Driver details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
        "404":
          description: Driver not found
    put:
      summary: Update driver by ID
      tags:
          - Drivers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Driver"
      responses:
        "200":
          description: Updated driver
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
    delete:
      summary: Delete driver by ID
      tags:
        - Drivers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Driver deleted

  /api/drivers:
    post:
      summary: Create a new driver
      tags:
        - Drivers
      requestBody:
        required: true
        content:
          application/json:

            schema:
              $ref: "#/components/schemas/Driver"
      responses:
        "201":
          description: Created driver
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
  /api/drivers/list:
    get:
      summary: List all drivers
      tags:
        - Drivers
      responses:
        "200":
          description: List of drivers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Driver"

  /api/inspections/{id}:
    get:
      summary: Get inspection by ID
      tags:
        - Inspections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Inspection details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inspection"
    put:
      summary: Update inspection by ID
      tags:
        - Inspections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inspection"
      responses:
        "200":
          description: Updated inspection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inspection"
    delete:
      summary: Delete inspection by ID
      tags:
        - Inspections
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Inspection deleted

  /api/inspections/list:
    get:
      summary: List all inspections
      tags:
        - Inspections
      responses:
        "200":
          description: List of inspections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Inspection"

  /api/vehicles/{id}:
    get:
      summary: Get vehicle by ID
      tags:
        - Vehicles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Vehicle details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
    put:
      summary: Update vehicle by ID
      tags:
        - Vehicles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        "200":
          description: Updated vehicle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
    delete:
      summary: Delete vehicle by ID
      tags:
        - Vehicles
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Vehicle deleted

  /api/vehicles/list:
    get:
      summary: List all vehicles
      tags:
        - Vehicles
      responses:
        "200":
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehicle"

components:
  schemas:
    Driver:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        licenseNumber:
          type: string
        # TODO: Add real fields
    Inspection:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        date:
          type: string
          format: date
        vehicleId:
          type: integer
        # TODO: Add real fields
    Vehicle:
      type: object
      properties:
        id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        # TODO: Add real fields

